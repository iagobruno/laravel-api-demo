## Autogenerated by Scribe. DO NOT MODIFY.

name: Tweets
description: 'Returns a paginated response.'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_username}/tweets'
    metadata:
      groupName: Tweets
      groupDescription: 'Returns a paginated response.'
      subgroup: ''
      subgroupDescription: ''
      title: "Get a user's tweets"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters:
      page:
        name: page
        description: 'The page number of the results to fetch.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      per_page:
        name: per_page
        description: 'The number of results per page to be returned. Max 50 and the default is 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9b73234c-47c0-411f-9a56-f88c15412cff","user_id":"9b73234c-40d8-4658-9253-473565510df0","content":"Rem est accusantium earum praesentium. Nam ipsa dolor nihil quia cumque nisi neque. Odio quasi eius in.","created_at":"2024-02-29T06:29:17.000000Z","updated_at":"2024-02-29T06:29:17.000000Z","user":{"id":"9b73234c-40d8-4658-9253-473565510df0","name":"Mr. Arden Wiza","username":"jhammes","email":"qhowell@example.net","email_verified_at":"2024-02-29T06:29:17.000000Z","created_at":"2024-02-29T06:29:17.000000Z","updated_at":"2024-02-29T06:29:17.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/jhammes\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/jhammes"},{"id":"9b73234c-8c24-4729-a658-dc44d617902d","user_id":"9b73234c-89ca-420e-9135-b72ca46cd92c","content":"Eos minima suscipit dolores animi. Mollitia libero in aperiam velit. Tenetur eligendi esse et esse necessitatibus eligendi assumenda.","created_at":"2024-02-29T06:29:17.000000Z","updated_at":"2024-02-29T06:29:17.000000Z","user":{"id":"9b73234c-89ca-420e-9135-b72ca46cd92c","name":"Virgil Haag","username":"ramon.mraz","email":"agustin.luettgen@example.net","email_verified_at":"2024-02-29T06:29:17.000000Z","created_at":"2024-02-29T06:29:17.000000Z","updated_at":"2024-02-29T06:29:17.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/ramon.mraz\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/ramon.mraz"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":2,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      meta:
        name: meta
        description: "Contains information about the paginator's state."
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      links:
        name: links
        description: 'Contains links to navigate.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tweets/{tweet_id}'
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a tweet'
      description: 'Get a specific tweet by id.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tweet_id:
        name: tweet_id
        description: 'The ID of the tweet.'
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      tweet_id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b73234e-a1cd-44ec-926b-4a0ae0bdfbe7","user_id":"9b73234e-9fbf-46a1-b2b1-fc47d29dc87d","content":"Aut blanditiis molestiae unde. Perspiciatis et tempore deleniti. Qui illum odio ipsa aut quis et in.","created_at":"2024-02-29T06:29:19.000000Z","updated_at":"2024-02-29T06:29:19.000000Z","user":{"id":"9b73234e-9fbf-46a1-b2b1-fc47d29dc87d","name":"Irwin Pfannerstill V","username":"darryl29","email":"jbartoletti@example.org","email_verified_at":"2024-02-29T06:29:18.000000Z","created_at":"2024-02-29T06:29:18.000000Z","updated_at":"2024-02-29T06:29:18.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/darryl29\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/darryl29"}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      user:
        name: user
        description: 'Contains the infos of the tweet author.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/feed
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user feed'
      description: |-
        Get the latest tweets from profiles the user follows.

        Returns a paginated response.

        The token does not require any permissions.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number of the results to fetch.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      per_page:
        name: per_page
        description: 'The number of results per page to be returned. Max 50 and the default is 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9b73234f-2366-459f-a1b6-a3886f829038","user_id":"9b73234f-1cb1-43aa-a6b4-b2a98d179bfb","content":"Rerum porro vero cupiditate natus. Sit consequuntur voluptatem quo. Sunt debitis vitae quidem similique in tempore quia.","created_at":"2024-02-29T06:29:19.000000Z","updated_at":"2024-02-29T06:29:19.000000Z","user":{"id":"9b73234f-1cb1-43aa-a6b4-b2a98d179bfb","name":"Ms. Novella Kub","username":"adrain.reichel","email":"langworth.antonietta@example.org","email_verified_at":"2024-02-29T06:29:19.000000Z","created_at":"2024-02-29T06:29:19.000000Z","updated_at":"2024-02-29T06:29:19.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/adrain.reichel\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/adrain.reichel"},{"id":"9b73234f-a851-4a9b-a603-67f3acf1015a","user_id":"9b73234f-a321-4e77-b0b0-d90c6fc51dfe","content":"Rerum non sit quos voluptatem ex. Vero minima molestias id iste alias. Nobis quas ipsum aliquam magni et nisi.","created_at":"2024-02-29T06:29:19.000000Z","updated_at":"2024-02-29T06:29:19.000000Z","user":{"id":"9b73234f-a321-4e77-b0b0-d90c6fc51dfe","name":"Shanie Kuphal","username":"balistreri.verda","email":"heaney.ethan@example.net","email_verified_at":"2024-02-29T06:29:19.000000Z","created_at":"2024-02-29T06:29:19.000000Z","updated_at":"2024-02-29T06:29:19.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/balistreri.verda\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/balistreri.verda"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":2,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      meta:
        name: meta
        description: "Contains information about the paginator's state."
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      links:
        name: links
        description: 'Contains links to navigate.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer a6DeVvgEbchak31645PZ8df'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tweets
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a tweet'
      description: |-
        Post a new tweet to the logged in user's account.

        The token must have the following permission: `tweet:write`.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The tweet content. Max 140 caracteres.'
        required: true
        example: 'Lorem ipsum dolor sit...'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      content: 'Lorem ipsum dolor sit...'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b732350-5279-4c86-8dec-008d91932f25","user_id":"9b732350-4be1-4adb-8f96-bd5f786a4fcc","content":"Quam ut sunt laudantium sint vero non est eos. Delectus molestiae qui autem dolorem quam.","created_at":"2024-02-29T06:29:20.000000Z","updated_at":"2024-02-29T06:29:20.000000Z","user":{"id":"9b732350-4be1-4adb-8f96-bd5f786a4fcc","name":"Isabella Smith","username":"ctremblay","email":"lkoelpin@example.org","email_verified_at":"2024-02-29T06:29:19.000000Z","created_at":"2024-02-29T06:29:20.000000Z","updated_at":"2024-02-29T06:29:20.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/ctremblay\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/ctremblay"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer faP4kdVE3hgacZ6b1658evD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tweets/{tweet_id}'
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a tweet'
      description: 'The token must have the following permission: `tweet:write`.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tweet_id:
        name: tweet_id
        description: 'The ID of the tweet.'
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      tweet_id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5D3haafvZ18E6bkcgPV64de'
    controller: null
    method: null
    route: null
    custom: []
