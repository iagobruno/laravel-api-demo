## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: |-

  APIs for managing users.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_username}'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a user'
      description: 'Provides publicly available information about some user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b73234b-bd23-4aea-8954-bd51152f4e6b","name":"Leonora Reilly V","username":"leland91","email":"rudolph02@example.com","email_verified_at":"2024-02-29T06:29:16.000000Z","created_at":"2024-02-29T06:29:17.000000Z","updated_at":"2024-02-29T06:29:17.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/leland91\/tweets"}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      viewer_follows:
        name: viewer_follows
        description: 'Indicates if the logged-in user follows the requested user.'
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      followers_count:
        name: followers_count
        description: 'Number of followers.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      following_count:
        name: following_count
        description: 'Number of accounts the user follows.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tweets_url:
        name: tweets_url
        description: "URI to fetch user's tweets."
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_username}/followers'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Followers
      subgroupDescription: ''
      title: 'List followers of a user'
      description: |-
        Lists the people following the specified user.

        Returns a paginated response.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters:
      page:
        name: page
        description: 'The page number of the results to fetch.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      per_page:
        name: per_page
        description: 'The number of results per page to be returned. Max 50 and the default is 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9b73234d-1f87-4fb5-a3e3-e3fa185eea0b","name":"Lempi Feil","username":"dooley.patricia","email":"bella.okuneva@example.org","email_verified_at":"2024-02-29T06:29:17.000000Z","created_at":"2024-02-29T06:29:18.000000Z","updated_at":"2024-02-29T06:29:18.000000Z"},{"id":"9b73234d-5ee8-4143-8090-be3bca41d5ba","name":"Mr. Abraham Bogan","username":"melvina95","email":"rspencer@example.com","email_verified_at":"2024-02-29T06:29:18.000000Z","created_at":"2024-02-29T06:29:18.000000Z","updated_at":"2024-02-29T06:29:18.000000Z"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":2,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      meta:
        name: meta
        description: "Contains information about the paginator's state."
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      links:
        name: links
        description: 'Contains links to navigate.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_username}/following'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Followers
      subgroupDescription: ''
      title: 'List the people a user follows'
      description: |-
        Lists the people who the specified user follows.

        Returns a paginated response.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters:
      page:
        name: page
        description: 'The page number of the results to fetch.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      per_page:
        name: per_page
        description: 'The number of results per page to be returned. Max 50 and the default is 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9b73234e-016c-4978-a25e-bbebf9894326","name":"Eryn Morissette","username":"tfeest","email":"kiehn.issac@example.com","email_verified_at":"2024-02-29T06:29:18.000000Z","created_at":"2024-02-29T06:29:18.000000Z","updated_at":"2024-02-29T06:29:18.000000Z"},{"id":"9b73234e-591e-45c8-a710-a295005bfe21","name":"Prof. Prudence Hegmann","username":"sbartell","email":"wilson61@example.org","email_verified_at":"2024-02-29T06:29:18.000000Z","created_at":"2024-02-29T06:29:18.000000Z","updated_at":"2024-02-29T06:29:18.000000Z"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":2,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      meta:
        name: meta
        description: "Contains information about the paginator's state."
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      links:
        name: links
        description: 'Contains links to navigate.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/me
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the authenticated user'
      description: |-
        Returns the currently logged-in user's data.

        The token does not require any permissions.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b732351-1e60-45b8-aa71-b88f10bf295f","name":"Prof. Alana Fahey III","username":"edison.ortiz","email":"yasmeen.friesen@example.org","email_verified_at":"2024-02-29T06:29:20.000000Z","created_at":"2024-02-29T06:29:20.000000Z","updated_at":"2024-02-29T06:29:20.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/edison.ortiz\/tweets"}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      viewer_follows:
        name: viewer_follows
        description: 'Indicates if the logged-in user follows the requested user.'
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      followers_count:
        name: followers_count
        description: 'Number of followers.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      following_count:
        name: following_count
        description: 'Number of accounts the user follows.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tweets_url:
        name: tweets_url
        description: "URI to fetch user's tweets."
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer DPV1gE3ae4df66kcbvZ8a5h'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/me
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the authenticated user'
      description: |-
        Updates the currently logged-in user's data.

        The token must have the following permission: `profile:write`.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: jamaal37@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      username:
        name: username
        description: 'Must contain only letters, numbers, dashes and underscores. Must be at least 4 characters. Must not be greater than 20 characters.'
        required: false
        example: rxohjamet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must be at least 1 character. Must not be greater than 50 characters.'
        required: false
        example: vijjaktdsxspsaafkqniyx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: jamaal37@example.net
      username: rxohjamet
      name: vijjaktdsxspsaafkqniyx
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a14kbh6Paf8Z6gv5DV3Edec'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/me
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the authenticated user'
      description: |-
        Delete the currently logged-in user account.

        The token must have the following permission: `profile:write`.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aP3b5D1kdcag46vfZVhe68E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/me/following/{user_username}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Followers
      subgroupDescription: ''
      title: 'Check if the authenticated user follows a user'
      description: |-
        Responds with 200 status code if the authenticated user follows the specified user and 404 if not.

        The token must have the following permission: `followers:read`.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: 'true'
        headers: []
        description: 'if the person is followed by the authenticated user'
        custom: []
      -
        status: 404
        content: 'false'
        headers: []
        description: 'if the person is not followed by the authenticated user'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dvkhfeba84cDPaEV6561gZ3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/me/following/{user_username}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Followers
      subgroupDescription: ''
      title: 'Follow another user'
      description: |-
        Makes the logged in user follow another user.

        The token must have the following permission: `followers:write`.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user to follow.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zca5g14dD36VE8febvhP6ka'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/me/following/{user_username}'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: Followers
      subgroupDescription: ''
      title: 'Unfollow a user'
      description: |-
        Makes the logged in user unfollow a user.

        The token must have the following permission: `followers:write`.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user to unfollow.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hv3V4d6cD581kaaZefgb6EP'
    controller: null
    method: null
    route: null
    custom: []
