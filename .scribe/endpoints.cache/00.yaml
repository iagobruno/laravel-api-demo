## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: |-

  APIs for managing users.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_username}'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a user'
      description: 'Returns the user data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b719955-8da0-4058-bf59-41d370ca942b","name":"Janie Dare","username":"bjast","email":"emmanuelle.pollich@example.com","email_verified_at":"2024-02-28T12:07:41.000000Z","created_at":"2024-02-28T12:07:41.000000Z","updated_at":"2024-02-28T12:07:41.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/bjast\/tweets"}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      viewer_follows:
        name: viewer_follows
        description: 'Indicates if the logged-in user follows the requested user.'
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      followers_count:
        name: followers_count
        description: 'Number of followers.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      following_count:
        name: following_count
        description: 'Number of accounts the user follows.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tweets_url:
        name: tweets_url
        description: "URI to fetch user's tweets."
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/me
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the logged in user'
      description: "Returns the currently logged-in user's data."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b719957-df4e-4f9e-9e64-6771cb02e061","name":"Nolan Schuppe","username":"thaddeus45","email":"pink.gottlieb@example.com","email_verified_at":"2024-02-28T12:07:42.000000Z","created_at":"2024-02-28T12:07:42.000000Z","updated_at":"2024-02-28T12:07:42.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/thaddeus45\/tweets"}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      viewer_follows:
        name: viewer_follows
        description: 'Indicates if the logged-in user follows the requested user.'
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      followers_count:
        name: followers_count
        description: 'Number of followers.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      following_count:
        name: following_count
        description: 'Number of accounts the user follows.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tweets_url:
        name: tweets_url
        description: "URI to fetch user's tweets."
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer chvD5bekf6P4Va68gd1ZaE3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/me
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update user data'
      description: "Updates the currently logged-in user's data."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: phowell@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      username:
        name: username
        description: 'Must contain only letters, numbers, dashes and underscores. Must be at least 4 characters. Must not be greater than 20 characters.'
        required: false
        example: njrktwzmxv
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must be at least 1 character. Must not be greater than 50 characters.'
        required: false
        example: bimeethplajen
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: phowell@example.com
      username: njrktwzmxv
      name: bimeethplajen
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3Z6khga5d1bPcf6ED4Vae8v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/me
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete user account'
      description: 'Delete the currently logged-in user account.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PV365edc46kgaa1hbDEvfZ8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_username}/follow'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Follow another user'
      description: 'Makes the logged in user follow another user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user to follow.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_username}/unfollow'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Unfollow a user'
      description: 'Makes the logged in user unfollow a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user to unfollow.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
