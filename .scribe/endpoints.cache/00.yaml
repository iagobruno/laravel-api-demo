## Autogenerated by Scribe. DO NOT MODIFY.

name: Users
description: |-

  APIs for managing users.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_username}'
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a user'
      description: 'Provides publicly available information about some user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b72f853-0a88-4958-acf6-51004618b98f","name":"Patience Runte","username":"adeline.stamm","email":"jlang@example.com","email_verified_at":"2024-02-29T04:29:07.000000Z","created_at":"2024-02-29T04:29:07.000000Z","updated_at":"2024-02-29T04:29:07.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/adeline.stamm\/tweets"}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      viewer_follows:
        name: viewer_follows
        description: 'Indicates if the logged-in user follows the requested user.'
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      followers_count:
        name: followers_count
        description: 'Number of followers.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      following_count:
        name: following_count
        description: 'Number of accounts the user follows.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tweets_url:
        name: tweets_url
        description: "URI to fetch user's tweets."
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/me
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the authenticated user'
      description: |-
        Returns the currently logged-in user's data.

        The token does not require any permissions.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b72f855-28e8-47bd-9c17-52cfb993efcf","name":"Eugenia Cummings","username":"terrill35","email":"zula54@example.net","email_verified_at":"2024-02-29T04:29:08.000000Z","created_at":"2024-02-29T04:29:09.000000Z","updated_at":"2024-02-29T04:29:09.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/terrill35\/tweets"}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      viewer_follows:
        name: viewer_follows
        description: 'Indicates if the logged-in user follows the requested user.'
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        custom: []
      followers_count:
        name: followers_count
        description: 'Number of followers.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      following_count:
        name: following_count
        description: 'Number of accounts the user follows.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tweets_url:
        name: tweets_url
        description: "URI to fetch user's tweets."
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer k65fZbd3eD4g6Ea8ac1VvPh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/me
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the authenticated user'
      description: |-
        Updates the currently logged-in user's data.

        The token must have the following permission: `profile:write`.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: dennis.wolff@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      username:
        name: username
        description: 'Must contain only letters, numbers, dashes and underscores. Must be at least 4 characters. Must not be greater than 20 characters.'
        required: false
        example: amlvjvlacuoybbxnavil
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      name:
        name: name
        description: 'Must be at least 1 character. Must not be greater than 50 characters.'
        required: false
        example: wjseeoigeqousubzo
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: dennis.wolff@example.org
      username: amlvjvlacuoybbxnavil
      name: wjseeoigeqousubzo
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 846aVa65c1hvfEkPZg3bDed'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/me
    metadata:
      groupName: Users
      groupDescription: |-

        APIs for managing users.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the authenticated user'
      description: |-
        Delete the currently logged-in user account.

        The token must have the following permission: `profile:write`.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kZDfc8a6EPa31hge6Vvb45d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_username}/follow'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Follow another user'
      description: 'Makes the logged in user follow another user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user to follow.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/users/{user_username}/unfollow'
    metadata:
      groupName: Users
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Unfollow a user'
      description: 'Makes the logged in user unfollow a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user to unfollow.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
