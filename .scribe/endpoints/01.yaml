name: Tweets
description: 'Returns a paginated response.'
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_username}/tweets'
    metadata:
      groupName: Tweets
      groupDescription: 'Returns a paginated response.'
      subgroup: ''
      subgroupDescription: ''
      title: "Get a user's tweets"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters:
      page:
        name: page
        description: 'The page number of the results to fetch.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      per_page:
        name: per_page
        description: 'The number of results per page to be returned. Max 50 and the default is 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9b72f853-71ae-4a7d-8141-c652e7f479cd","user_id":"9b72f853-6f70-4734-a7ef-c22e42cbe428","content":"Cupiditate modi nesciunt voluptatum in. Quo odit non ea sit. Sint qui ut eius et consequuntur.","created_at":"2024-02-29T04:29:07.000000Z","updated_at":"2024-02-29T04:29:07.000000Z","user":{"id":"9b72f853-6f70-4734-a7ef-c22e42cbe428","name":"Ewell Erdman I","username":"horacio.bernhard","email":"ward83@example.org","email_verified_at":"2024-02-29T04:29:07.000000Z","created_at":"2024-02-29T04:29:07.000000Z","updated_at":"2024-02-29T04:29:07.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/horacio.bernhard\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/horacio.bernhard"},{"id":"9b72f853-adee-4903-8e84-125fc58cf605","user_id":"9b72f853-ab96-44b0-b638-e6ceba5aaf00","content":"Qui est cumque dolorem dolore. Sit aut sint eligendi iusto. Inventore provident velit qui ut corporis porro dolor.","created_at":"2024-02-29T04:29:08.000000Z","updated_at":"2024-02-29T04:29:08.000000Z","user":{"id":"9b72f853-ab96-44b0-b638-e6ceba5aaf00","name":"Matteo Dietrich","username":"reta.adams","email":"marlene99@example.org","email_verified_at":"2024-02-29T04:29:07.000000Z","created_at":"2024-02-29T04:29:08.000000Z","updated_at":"2024-02-29T04:29:08.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/reta.adams\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/reta.adams"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":2,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      meta:
        name: meta
        description: "Contains information about the paginator's state."
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      links:
        name: links
        description: 'Contains links to navigate.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tweets/{tweet_id}'
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a tweet'
      description: 'Get a specific tweet by id.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tweet_id:
        name: tweet_id
        description: 'The ID of the tweet.'
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      tweet_id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b72f854-0122-40db-89c9-531ffd6af473","user_id":"9b72f853-fe11-4ee7-95a2-2e81378fda10","content":"Sunt molestiae mollitia beatae illum. Neque non et non quis iste qui. Maxime quidem sint et sapiente delectus saepe quia.","created_at":"2024-02-29T04:29:08.000000Z","updated_at":"2024-02-29T04:29:08.000000Z","user":{"id":"9b72f853-fe11-4ee7-95a2-2e81378fda10","name":"Elyssa Legros","username":"brent58","email":"murazik.mario@example.com","email_verified_at":"2024-02-29T04:29:08.000000Z","created_at":"2024-02-29T04:29:08.000000Z","updated_at":"2024-02-29T04:29:08.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/brent58\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/brent58"}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      user:
        name: user
        description: 'Contains the infos of the tweet author.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/feed
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user feed'
      description: |-
        Get the latest tweets from profiles the user follows.

        Returns a paginated response.

        The token does not require any permissions.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number of the results to fetch.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      per_page:
        name: per_page
        description: 'The number of results per page to be returned. Max 50 and the default is 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9b72f854-5201-4268-8500-0ea035fd725b","user_id":"9b72f854-4d9f-4852-b32e-14163b52e15f","content":"Quo ut veniam sed facere. Saepe provident sit aut porro perferendis. Possimus corporis ut nihil qui ipsa rerum eveniet perspiciatis.","created_at":"2024-02-29T04:29:08.000000Z","updated_at":"2024-02-29T04:29:08.000000Z","user":{"id":"9b72f854-4d9f-4852-b32e-14163b52e15f","name":"Jewel Hackett DDS","username":"gladyce.leannon","email":"qbogan@example.com","email_verified_at":"2024-02-29T04:29:08.000000Z","created_at":"2024-02-29T04:29:08.000000Z","updated_at":"2024-02-29T04:29:08.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/gladyce.leannon\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/gladyce.leannon"},{"id":"9b72f854-8cb1-4d08-82c1-3584b1990f2e","user_id":"9b72f854-8768-419a-8c17-2231fd2c3394","content":"Totam repudiandae neque dolorem tempore eveniet. Nostrum qui et et ullam cupiditate ut eum. Molestias modi atque enim aliquam autem velit.","created_at":"2024-02-29T04:29:08.000000Z","updated_at":"2024-02-29T04:29:08.000000Z","user":{"id":"9b72f854-8768-419a-8c17-2231fd2c3394","name":"Arlo Hilpert DVM","username":"xavier.kuvalis","email":"nader.devan@example.net","email_verified_at":"2024-02-29T04:29:08.000000Z","created_at":"2024-02-29T04:29:08.000000Z","updated_at":"2024-02-29T04:29:08.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/xavier.kuvalis\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/xavier.kuvalis"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":2,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      meta:
        name: meta
        description: "Contains information about the paginator's state."
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      links:
        name: links
        description: 'Contains links to navigate.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer a56ev1fc348PVhZagd6bDkE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tweets
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a tweet'
      description: |-
        Post a new tweet to the logged in user's account.

        The token must have the following permission: `tweet:write`.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The tweet content. Max 140 caracteres.'
        required: true
        example: 'Lorem ipsum dolor sit...'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      content: 'Lorem ipsum dolor sit...'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b72f854-d91d-4215-984e-9e2d6aba063a","user_id":"9b72f854-d6ac-47b6-83cc-56155a55cf89","content":"Consequatur ut cum laboriosam laudantium consequatur alias rem. At delectus non nobis in sint.","created_at":"2024-02-29T04:29:08.000000Z","updated_at":"2024-02-29T04:29:08.000000Z","user":{"id":"9b72f854-d6ac-47b6-83cc-56155a55cf89","name":"Brannon Stamm","username":"wthompson","email":"jennyfer.west@example.net","email_verified_at":"2024-02-29T04:29:08.000000Z","created_at":"2024-02-29T04:29:08.000000Z","updated_at":"2024-02-29T04:29:08.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/wthompson\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/wthompson"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gcf51bV6D46dEavkeZ8hPa3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tweets/{tweet_id}'
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a tweet'
      description: 'The token must have the following permission: `tweet:write`.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tweet_id:
        name: tweet_id
        description: 'The ID of the tweet.'
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      tweet_id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eE3a6VD4v56PgbZhdk1ca8f'
    controller: null
    method: null
    route: null
    custom: []
