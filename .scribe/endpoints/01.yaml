name: Tweets
description: |-

  APIs for managing tweets.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_username}/tweets'
    metadata:
      groupName: Tweets
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Get a user's tweets"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_username:
        name: user_username
        description: 'The username of the user.'
        required: true
        example: thay_26
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      user_username: thay_26
    queryParameters:
      page:
        name: page
        description: 'The page number of the results to fetch.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'The number of results per page to be returned. Max 50 and the default is 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: 1
      limit: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9b71ad8d-54a8-4d64-bd24-5bb23152b056","user_id":"9b71ad8d-5265-4ba6-91ea-36b659ada10c","content":"Cupiditate aliquid impedit nam numquam quia architecto laborum aliquam. Recusandae qui provident laborum. Non id repellendus totam.","created_at":"2024-02-28T13:04:13.000000Z","updated_at":"2024-02-28T13:04:13.000000Z","user":{"id":"9b71ad8d-5265-4ba6-91ea-36b659ada10c","name":"Weldon Swift","username":"xwintheiser","email":"mayert.corrine@example.org","email_verified_at":"2024-02-28T13:04:13.000000Z","created_at":"2024-02-28T13:04:13.000000Z","updated_at":"2024-02-28T13:04:13.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/xwintheiser\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/xwintheiser"},{"id":"9b71ad8d-9fff-4785-b6f9-3a8c427d8290","user_id":"9b71ad8d-948c-4980-b25c-190d61305e97","content":"Ab officiis voluptatem est deserunt. Libero qui quaerat soluta deserunt consequatur. Deleniti voluptatem voluptas minus qui sed.","created_at":"2024-02-28T13:04:13.000000Z","updated_at":"2024-02-28T13:04:13.000000Z","user":{"id":"9b71ad8d-948c-4980-b25c-190d61305e97","name":"Mrs. Ericka Langworth","username":"akuhlman","email":"celia35@example.net","email_verified_at":"2024-02-28T13:04:13.000000Z","created_at":"2024-02-28T13:04:13.000000Z","updated_at":"2024-02-28T13:04:13.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/akuhlman\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/akuhlman"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":2,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      meta:
        name: meta
        description: "Contains information about the paginator's state."
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      links:
        name: links
        description: 'Contains links to navigate.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tweets/{tweet_id}'
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a tweet'
      description: 'Get a specific tweet by id.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tweet_id:
        name: tweet_id
        description: 'The ID of the tweet.'
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      tweet_id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b71ad8e-02de-4c6e-abef-1068b80d8c7a","user_id":"9b71ad8d-fef5-4a54-ae4c-b92e84c713c1","content":"Est et quam quia beatae. Rem atque modi dolor aut eius cum modi autem. Doloribus architecto veritatis temporibus et non totam rerum.","created_at":"2024-02-28T13:04:13.000000Z","updated_at":"2024-02-28T13:04:13.000000Z","user":{"id":"9b71ad8d-fef5-4a54-ae4c-b92e84c713c1","name":"Lela Yost","username":"micaela.gislason","email":"ugerlach@example.org","email_verified_at":"2024-02-28T13:04:13.000000Z","created_at":"2024-02-28T13:04:13.000000Z","updated_at":"2024-02-28T13:04:13.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/micaela.gislason\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/micaela.gislason"}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      user:
        name: user
        description: 'Contains the infos of the tweet author.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/feed
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get user feed'
      description: 'Get the latest tweets from profiles the user follows.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number of the results to fetch.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'The number of results per page to be returned. Max 50 and the default is 10.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      page: 1
      limit: 10
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":"9b71ad8e-4a26-4f7c-8fb2-7eec0db079d3","user_id":"9b71ad8e-47c3-4152-b12f-f41028658def","content":"Error quaerat debitis quia dicta consequuntur aut provident. Expedita quia voluptatem eum in quisquam praesentium et nobis.","created_at":"2024-02-28T13:04:13.000000Z","updated_at":"2024-02-28T13:04:13.000000Z","user":{"id":"9b71ad8e-47c3-4152-b12f-f41028658def","name":"Sandy Dietrich","username":"maximilian41","email":"eortiz@example.com","email_verified_at":"2024-02-28T13:04:13.000000Z","created_at":"2024-02-28T13:04:13.000000Z","updated_at":"2024-02-28T13:04:13.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/maximilian41\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/maximilian41"},{"id":"9b71ad8e-8e52-4fa3-90d0-0ce444cf19d2","user_id":"9b71ad8e-8c20-4496-a4e2-0b4c0db11197","content":"Sed libero modi dignissimos reiciendis. Repudiandae voluptas necessitatibus aliquam et voluptatem expedita. Nisi et est ut repellat fugiat.","created_at":"2024-02-28T13:04:14.000000Z","updated_at":"2024-02-28T13:04:14.000000Z","user":{"id":"9b71ad8e-8c20-4496-a4e2-0b4c0db11197","name":"Dorcas Keeling","username":"wunsch.chelsea","email":"jordan19@example.org","email_verified_at":"2024-02-28T13:04:13.000000Z","created_at":"2024-02-28T13:04:14.000000Z","updated_at":"2024-02-28T13:04:14.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/wunsch.chelsea\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/wunsch.chelsea"}],"links":{"first":"\/?page=1","last":"\/?page=1","prev":null,"next":null},"meta":{"current_page":1,"from":1,"last_page":1,"links":[{"url":null,"label":"&laquo; Previous","active":false},{"url":"\/?page=1","label":"1","active":true},{"url":null,"label":"Next &raquo;","active":false}],"path":"\/","per_page":2,"to":2,"total":2}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      meta:
        name: meta
        description: "Contains information about the paginator's state."
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      links:
        name: links
        description: 'Contains links to navigate.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer 61dc84PbDVfkgva3a56hZEe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tweets
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a tweet'
      description: "Post a new tweet to the logged in user's account."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'The tweet content. Max 140 caracteres.'
        required: true
        example: 'Lorem ipsum dolor sit...'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      content: 'Lorem ipsum dolor sit...'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"9b71ad8e-d6ab-48a5-8310-47fe4d7d3eb3","user_id":"9b71ad8e-d420-47d0-b156-a168113cac3d","content":"Voluptatem cum quaerat reiciendis ut occaecati. Cum doloremque quia iure iusto quia et rem. Eum commodi omnis iusto sed.","created_at":"2024-02-28T13:04:14.000000Z","updated_at":"2024-02-28T13:04:14.000000Z","user":{"id":"9b71ad8e-d420-47d0-b156-a168113cac3d","name":"Miss Verlie Hansen","username":"ocrona","email":"yasmin.ondricka@example.com","email_verified_at":"2024-02-28T13:04:14.000000Z","created_at":"2024-02-28T13:04:14.000000Z","updated_at":"2024-02-28T13:04:14.000000Z","viewer_follows":false,"followers_count":0,"following_count":0,"tweets_url":"http:\/\/localhost:8000\/api\/api\/users\/ocrona\/tweets"},"user_url":"http:\/\/localhost:8000\/api\/api\/users\/ocrona"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z6PfEed36v45ac1gkbaDVh8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tweets/{tweet_id}'
    metadata:
      groupName: Tweets
      groupDescription: |-

        APIs for managing tweets.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a tweet'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      tweet_id:
        name: tweet_id
        description: 'The ID of the tweet.'
        required: true
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      tweet_id: null
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hga4EVv1P8Deda6bZc6f35k'
    controller: null
    method: null
    route: null
    custom: []
