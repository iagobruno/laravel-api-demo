openapi: 3.0.3
info:
  title: 'API documentation'
  description: 'Saiba como come√ßar a usar rapidamente a nossa API REST.'
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000/api'
paths:
  '/api/users/{user_username}/tweets':
    get:
      summary: "Get a user's tweets"
      operationId: getAUsersTweets
      description: ''
      parameters:
        -
          in: query
          name: page
          description: 'The page number of the results to fetch.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'The page number of the results to fetch.'
            example: 1
        -
          in: query
          name: per_page
          description: 'The number of results per page to be returned. Max 50 and the default is 10.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The number of results per page to be returned. Max 50 and the default is 10.'
            example: 10
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 9b72f853-71ae-4a7d-8141-c652e7f479cd
                      user_id: 9b72f853-6f70-4734-a7ef-c22e42cbe428
                      content: 'Cupiditate modi nesciunt voluptatum in. Quo odit non ea sit. Sint qui ut eius et consequuntur.'
                      created_at: '2024-02-29T04:29:07.000000Z'
                      updated_at: '2024-02-29T04:29:07.000000Z'
                      user:
                        id: 9b72f853-6f70-4734-a7ef-c22e42cbe428
                        name: 'Ewell Erdman I'
                        username: horacio.bernhard
                        email: ward83@example.org
                        email_verified_at: '2024-02-29T04:29:07.000000Z'
                        created_at: '2024-02-29T04:29:07.000000Z'
                        updated_at: '2024-02-29T04:29:07.000000Z'
                        viewer_follows: false
                        followers_count: 0
                        following_count: 0
                        tweets_url: 'http://localhost:8000/api/api/users/horacio.bernhard/tweets'
                      user_url: 'http://localhost:8000/api/api/users/horacio.bernhard'
                    -
                      id: 9b72f853-adee-4903-8e84-125fc58cf605
                      user_id: 9b72f853-ab96-44b0-b638-e6ceba5aaf00
                      content: 'Qui est cumque dolorem dolore. Sit aut sint eligendi iusto. Inventore provident velit qui ut corporis porro dolor.'
                      created_at: '2024-02-29T04:29:08.000000Z'
                      updated_at: '2024-02-29T04:29:08.000000Z'
                      user:
                        id: 9b72f853-ab96-44b0-b638-e6ceba5aaf00
                        name: 'Matteo Dietrich'
                        username: reta.adams
                        email: marlene99@example.org
                        email_verified_at: '2024-02-29T04:29:07.000000Z'
                        created_at: '2024-02-29T04:29:08.000000Z'
                        updated_at: '2024-02-29T04:29:08.000000Z'
                        viewer_follows: false
                        followers_count: 0
                        following_count: 0
                        tweets_url: 'http://localhost:8000/api/api/users/reta.adams/tweets'
                      user_url: 'http://localhost:8000/api/api/users/reta.adams'
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: /
                    per_page: 2
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 9b72f853-71ae-4a7d-8141-c652e7f479cd
                        user_id: 9b72f853-6f70-4734-a7ef-c22e42cbe428
                        content: 'Cupiditate modi nesciunt voluptatum in. Quo odit non ea sit. Sint qui ut eius et consequuntur.'
                        created_at: '2024-02-29T04:29:07.000000Z'
                        updated_at: '2024-02-29T04:29:07.000000Z'
                        user:
                          id: 9b72f853-6f70-4734-a7ef-c22e42cbe428
                          name: 'Ewell Erdman I'
                          username: horacio.bernhard
                          email: ward83@example.org
                          email_verified_at: '2024-02-29T04:29:07.000000Z'
                          created_at: '2024-02-29T04:29:07.000000Z'
                          updated_at: '2024-02-29T04:29:07.000000Z'
                          viewer_follows: false
                          followers_count: 0
                          following_count: 0
                          tweets_url: 'http://localhost:8000/api/api/users/horacio.bernhard/tweets'
                        user_url: 'http://localhost:8000/api/api/users/horacio.bernhard'
                      -
                        id: 9b72f853-adee-4903-8e84-125fc58cf605
                        user_id: 9b72f853-ab96-44b0-b638-e6ceba5aaf00
                        content: 'Qui est cumque dolorem dolore. Sit aut sint eligendi iusto. Inventore provident velit qui ut corporis porro dolor.'
                        created_at: '2024-02-29T04:29:08.000000Z'
                        updated_at: '2024-02-29T04:29:08.000000Z'
                        user:
                          id: 9b72f853-ab96-44b0-b638-e6ceba5aaf00
                          name: 'Matteo Dietrich'
                          username: reta.adams
                          email: marlene99@example.org
                          email_verified_at: '2024-02-29T04:29:07.000000Z'
                          created_at: '2024-02-29T04:29:08.000000Z'
                          updated_at: '2024-02-29T04:29:08.000000Z'
                          viewer_follows: false
                          followers_count: 0
                          following_count: 0
                          tweets_url: 'http://localhost:8000/api/api/users/reta.adams/tweets'
                        user_url: 'http://localhost:8000/api/api/users/reta.adams'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9b72f853-71ae-4a7d-8141-c652e7f479cd
                        user_id:
                          type: string
                          example: 9b72f853-6f70-4734-a7ef-c22e42cbe428
                        content:
                          type: string
                          example: 'Cupiditate modi nesciunt voluptatum in. Quo odit non ea sit. Sint qui ut eius et consequuntur.'
                        created_at:
                          type: string
                          example: '2024-02-29T04:29:07.000000Z'
                        updated_at:
                          type: string
                          example: '2024-02-29T04:29:07.000000Z'
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 9b72f853-6f70-4734-a7ef-c22e42cbe428
                            name:
                              type: string
                              example: 'Ewell Erdman I'
                            username:
                              type: string
                              example: horacio.bernhard
                            email:
                              type: string
                              example: ward83@example.org
                            email_verified_at:
                              type: string
                              example: '2024-02-29T04:29:07.000000Z'
                            created_at:
                              type: string
                              example: '2024-02-29T04:29:07.000000Z'
                            updated_at:
                              type: string
                              example: '2024-02-29T04:29:07.000000Z'
                            viewer_follows:
                              type: boolean
                              example: false
                            followers_count:
                              type: integer
                              example: 0
                            following_count:
                              type: integer
                              example: 0
                            tweets_url:
                              type: string
                              example: 'http://localhost:8000/api/api/users/horacio.bernhard/tweets'
                        user_url:
                          type: string
                          example: 'http://localhost:8000/api/api/users/horacio.bernhard'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: '/?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 2
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 2
      tags:
        - Tweets
      security: []
    parameters:
      -
        in: path
        name: user_username
        description: 'The username of the user.'
        example: thay_26
        required: true
        schema:
          type: string
  '/api/tweets/{tweet_id}':
    get:
      summary: 'Get a tweet'
      operationId: getATweet
      description: 'Get a specific tweet by id.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 9b72f854-0122-40db-89c9-531ffd6af473
                    user_id: 9b72f853-fe11-4ee7-95a2-2e81378fda10
                    content: 'Sunt molestiae mollitia beatae illum. Neque non et non quis iste qui. Maxime quidem sint et sapiente delectus saepe quia.'
                    created_at: '2024-02-29T04:29:08.000000Z'
                    updated_at: '2024-02-29T04:29:08.000000Z'
                    user:
                      id: 9b72f853-fe11-4ee7-95a2-2e81378fda10
                      name: 'Elyssa Legros'
                      username: brent58
                      email: murazik.mario@example.com
                      email_verified_at: '2024-02-29T04:29:08.000000Z'
                      created_at: '2024-02-29T04:29:08.000000Z'
                      updated_at: '2024-02-29T04:29:08.000000Z'
                      viewer_follows: false
                      followers_count: 0
                      following_count: 0
                      tweets_url: 'http://localhost:8000/api/api/users/brent58/tweets'
                    user_url: 'http://localhost:8000/api/api/users/brent58'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9b72f854-0122-40db-89c9-531ffd6af473
                      user_id:
                        type: string
                        example: 9b72f853-fe11-4ee7-95a2-2e81378fda10
                      content:
                        type: string
                        example: 'Sunt molestiae mollitia beatae illum. Neque non et non quis iste qui. Maxime quidem sint et sapiente delectus saepe quia.'
                      created_at:
                        type: string
                        example: '2024-02-29T04:29:08.000000Z'
                      updated_at:
                        type: string
                        example: '2024-02-29T04:29:08.000000Z'
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 9b72f853-fe11-4ee7-95a2-2e81378fda10
                          name:
                            type: string
                            example: 'Elyssa Legros'
                          username:
                            type: string
                            example: brent58
                          email:
                            type: string
                            example: murazik.mario@example.com
                          email_verified_at:
                            type: string
                            example: '2024-02-29T04:29:08.000000Z'
                          created_at:
                            type: string
                            example: '2024-02-29T04:29:08.000000Z'
                          updated_at:
                            type: string
                            example: '2024-02-29T04:29:08.000000Z'
                          viewer_follows:
                            type: boolean
                            example: false
                          followers_count:
                            type: integer
                            example: 0
                          following_count:
                            type: integer
                            example: 0
                          tweets_url:
                            type: string
                            example: 'http://localhost:8000/api/api/users/brent58/tweets'
                      user_url:
                        type: string
                        example: 'http://localhost:8000/api/api/users/brent58'
      tags:
        - Tweets
      security: []
    delete:
      summary: 'Delete a tweet'
      operationId: deleteATweet
      description: 'The token must have the following permission: `tweet:write`.'
      parameters: []
      responses: {  }
      tags:
        - Tweets
    parameters:
      -
        in: path
        name: tweet_id
        description: 'The ID of the tweet.'
        example: null
        required: true
        schema:
          type: string
  /api/feed:
    get:
      summary: 'Get user feed'
      operationId: getUserFeed
      description: "Get the latest tweets from profiles the user follows.\n\nReturns a paginated response.\n\nThe token does not require any permissions."
      parameters:
        -
          in: query
          name: page
          description: 'The page number of the results to fetch.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'The page number of the results to fetch.'
            example: 1
        -
          in: query
          name: per_page
          description: 'The number of results per page to be returned. Max 50 and the default is 10.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The number of results per page to be returned. Max 50 and the default is 10.'
            example: 10
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 9b72f854-5201-4268-8500-0ea035fd725b
                      user_id: 9b72f854-4d9f-4852-b32e-14163b52e15f
                      content: 'Quo ut veniam sed facere. Saepe provident sit aut porro perferendis. Possimus corporis ut nihil qui ipsa rerum eveniet perspiciatis.'
                      created_at: '2024-02-29T04:29:08.000000Z'
                      updated_at: '2024-02-29T04:29:08.000000Z'
                      user:
                        id: 9b72f854-4d9f-4852-b32e-14163b52e15f
                        name: 'Jewel Hackett DDS'
                        username: gladyce.leannon
                        email: qbogan@example.com
                        email_verified_at: '2024-02-29T04:29:08.000000Z'
                        created_at: '2024-02-29T04:29:08.000000Z'
                        updated_at: '2024-02-29T04:29:08.000000Z'
                        viewer_follows: false
                        followers_count: 0
                        following_count: 0
                        tweets_url: 'http://localhost:8000/api/api/users/gladyce.leannon/tweets'
                      user_url: 'http://localhost:8000/api/api/users/gladyce.leannon'
                    -
                      id: 9b72f854-8cb1-4d08-82c1-3584b1990f2e
                      user_id: 9b72f854-8768-419a-8c17-2231fd2c3394
                      content: 'Totam repudiandae neque dolorem tempore eveniet. Nostrum qui et et ullam cupiditate ut eum. Molestias modi atque enim aliquam autem velit.'
                      created_at: '2024-02-29T04:29:08.000000Z'
                      updated_at: '2024-02-29T04:29:08.000000Z'
                      user:
                        id: 9b72f854-8768-419a-8c17-2231fd2c3394
                        name: 'Arlo Hilpert DVM'
                        username: xavier.kuvalis
                        email: nader.devan@example.net
                        email_verified_at: '2024-02-29T04:29:08.000000Z'
                        created_at: '2024-02-29T04:29:08.000000Z'
                        updated_at: '2024-02-29T04:29:08.000000Z'
                        viewer_follows: false
                        followers_count: 0
                        following_count: 0
                        tweets_url: 'http://localhost:8000/api/api/users/xavier.kuvalis/tweets'
                      user_url: 'http://localhost:8000/api/api/users/xavier.kuvalis'
                  links:
                    first: '/?page=1'
                    last: '/?page=1'
                    prev: null
                    next: null
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 1
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: '/?page=1'
                        label: '1'
                        active: true
                      -
                        url: null
                        label: 'Next &raquo;'
                        active: false
                    path: /
                    per_page: 2
                    to: 2
                    total: 2
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 9b72f854-5201-4268-8500-0ea035fd725b
                        user_id: 9b72f854-4d9f-4852-b32e-14163b52e15f
                        content: 'Quo ut veniam sed facere. Saepe provident sit aut porro perferendis. Possimus corporis ut nihil qui ipsa rerum eveniet perspiciatis.'
                        created_at: '2024-02-29T04:29:08.000000Z'
                        updated_at: '2024-02-29T04:29:08.000000Z'
                        user:
                          id: 9b72f854-4d9f-4852-b32e-14163b52e15f
                          name: 'Jewel Hackett DDS'
                          username: gladyce.leannon
                          email: qbogan@example.com
                          email_verified_at: '2024-02-29T04:29:08.000000Z'
                          created_at: '2024-02-29T04:29:08.000000Z'
                          updated_at: '2024-02-29T04:29:08.000000Z'
                          viewer_follows: false
                          followers_count: 0
                          following_count: 0
                          tweets_url: 'http://localhost:8000/api/api/users/gladyce.leannon/tweets'
                        user_url: 'http://localhost:8000/api/api/users/gladyce.leannon'
                      -
                        id: 9b72f854-8cb1-4d08-82c1-3584b1990f2e
                        user_id: 9b72f854-8768-419a-8c17-2231fd2c3394
                        content: 'Totam repudiandae neque dolorem tempore eveniet. Nostrum qui et et ullam cupiditate ut eum. Molestias modi atque enim aliquam autem velit.'
                        created_at: '2024-02-29T04:29:08.000000Z'
                        updated_at: '2024-02-29T04:29:08.000000Z'
                        user:
                          id: 9b72f854-8768-419a-8c17-2231fd2c3394
                          name: 'Arlo Hilpert DVM'
                          username: xavier.kuvalis
                          email: nader.devan@example.net
                          email_verified_at: '2024-02-29T04:29:08.000000Z'
                          created_at: '2024-02-29T04:29:08.000000Z'
                          updated_at: '2024-02-29T04:29:08.000000Z'
                          viewer_follows: false
                          followers_count: 0
                          following_count: 0
                          tweets_url: 'http://localhost:8000/api/api/users/xavier.kuvalis/tweets'
                        user_url: 'http://localhost:8000/api/api/users/xavier.kuvalis'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 9b72f854-5201-4268-8500-0ea035fd725b
                        user_id:
                          type: string
                          example: 9b72f854-4d9f-4852-b32e-14163b52e15f
                        content:
                          type: string
                          example: 'Quo ut veniam sed facere. Saepe provident sit aut porro perferendis. Possimus corporis ut nihil qui ipsa rerum eveniet perspiciatis.'
                        created_at:
                          type: string
                          example: '2024-02-29T04:29:08.000000Z'
                        updated_at:
                          type: string
                          example: '2024-02-29T04:29:08.000000Z'
                        user:
                          type: object
                          properties:
                            id:
                              type: string
                              example: 9b72f854-4d9f-4852-b32e-14163b52e15f
                            name:
                              type: string
                              example: 'Jewel Hackett DDS'
                            username:
                              type: string
                              example: gladyce.leannon
                            email:
                              type: string
                              example: qbogan@example.com
                            email_verified_at:
                              type: string
                              example: '2024-02-29T04:29:08.000000Z'
                            created_at:
                              type: string
                              example: '2024-02-29T04:29:08.000000Z'
                            updated_at:
                              type: string
                              example: '2024-02-29T04:29:08.000000Z'
                            viewer_follows:
                              type: boolean
                              example: false
                            followers_count:
                              type: integer
                              example: 0
                            following_count:
                              type: integer
                              example: 0
                            tweets_url:
                              type: string
                              example: 'http://localhost:8000/api/api/users/gladyce.leannon/tweets'
                        user_url:
                          type: string
                          example: 'http://localhost:8000/api/api/users/gladyce.leannon'
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: '/?page=1'
                      last:
                        type: string
                        example: '/?page=1'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: null
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: '/?page=1'
                            label: '1'
                            active: true
                          -
                            url: null
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: /
                      per_page:
                        type: integer
                        example: 2
                      to:
                        type: integer
                        example: 2
                      total:
                        type: integer
                        example: 2
      tags:
        - Tweets
  /api/tweets:
    post:
      summary: 'Create a tweet'
      operationId: createATweet
      description: "Post a new tweet to the logged in user's account.\n\nThe token must have the following permission: `tweet:write`."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 9b72f854-d91d-4215-984e-9e2d6aba063a
                    user_id: 9b72f854-d6ac-47b6-83cc-56155a55cf89
                    content: 'Consequatur ut cum laboriosam laudantium consequatur alias rem. At delectus non nobis in sint.'
                    created_at: '2024-02-29T04:29:08.000000Z'
                    updated_at: '2024-02-29T04:29:08.000000Z'
                    user:
                      id: 9b72f854-d6ac-47b6-83cc-56155a55cf89
                      name: 'Brannon Stamm'
                      username: wthompson
                      email: jennyfer.west@example.net
                      email_verified_at: '2024-02-29T04:29:08.000000Z'
                      created_at: '2024-02-29T04:29:08.000000Z'
                      updated_at: '2024-02-29T04:29:08.000000Z'
                      viewer_follows: false
                      followers_count: 0
                      following_count: 0
                      tweets_url: 'http://localhost:8000/api/api/users/wthompson/tweets'
                    user_url: 'http://localhost:8000/api/api/users/wthompson'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9b72f854-d91d-4215-984e-9e2d6aba063a
                      user_id:
                        type: string
                        example: 9b72f854-d6ac-47b6-83cc-56155a55cf89
                      content:
                        type: string
                        example: 'Consequatur ut cum laboriosam laudantium consequatur alias rem. At delectus non nobis in sint.'
                      created_at:
                        type: string
                        example: '2024-02-29T04:29:08.000000Z'
                      updated_at:
                        type: string
                        example: '2024-02-29T04:29:08.000000Z'
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 9b72f854-d6ac-47b6-83cc-56155a55cf89
                          name:
                            type: string
                            example: 'Brannon Stamm'
                          username:
                            type: string
                            example: wthompson
                          email:
                            type: string
                            example: jennyfer.west@example.net
                          email_verified_at:
                            type: string
                            example: '2024-02-29T04:29:08.000000Z'
                          created_at:
                            type: string
                            example: '2024-02-29T04:29:08.000000Z'
                          updated_at:
                            type: string
                            example: '2024-02-29T04:29:08.000000Z'
                          viewer_follows:
                            type: boolean
                            example: false
                          followers_count:
                            type: integer
                            example: 0
                          following_count:
                            type: integer
                            example: 0
                          tweets_url:
                            type: string
                            example: 'http://localhost:8000/api/api/users/wthompson/tweets'
                      user_url:
                        type: string
                        example: 'http://localhost:8000/api/api/users/wthompson'
      tags:
        - Tweets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: 'The tweet content. Max 140 caracteres.'
                  example: 'Lorem ipsum dolor sit...'
              required:
                - content
  '/api/users/{user_username}':
    get:
      summary: 'Get a user'
      operationId: getAUser
      description: 'Provides publicly available information about some user.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 9b72f853-0a88-4958-acf6-51004618b98f
                    name: 'Patience Runte'
                    username: adeline.stamm
                    email: jlang@example.com
                    email_verified_at: '2024-02-29T04:29:07.000000Z'
                    created_at: '2024-02-29T04:29:07.000000Z'
                    updated_at: '2024-02-29T04:29:07.000000Z'
                    viewer_follows: false
                    followers_count: 0
                    following_count: 0
                    tweets_url: 'http://localhost:8000/api/api/users/adeline.stamm/tweets'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9b72f853-0a88-4958-acf6-51004618b98f
                      name:
                        type: string
                        example: 'Patience Runte'
                      username:
                        type: string
                        example: adeline.stamm
                      email:
                        type: string
                        example: jlang@example.com
                      email_verified_at:
                        type: string
                        example: '2024-02-29T04:29:07.000000Z'
                      created_at:
                        type: string
                        example: '2024-02-29T04:29:07.000000Z'
                      updated_at:
                        type: string
                        example: '2024-02-29T04:29:07.000000Z'
                      viewer_follows:
                        type: boolean
                        example: false
                      followers_count:
                        type: integer
                        example: 0
                      following_count:
                        type: integer
                        example: 0
                      tweets_url:
                        type: string
                        example: 'http://localhost:8000/api/api/users/adeline.stamm/tweets'
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: user_username
        description: 'The username of the user.'
        example: thay_26
        required: true
        schema:
          type: string
  /api/me:
    get:
      summary: 'Get the authenticated user'
      operationId: getTheAuthenticatedUser
      description: "Returns the currently logged-in user's data.\n\nThe token does not require any permissions."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 9b72f855-28e8-47bd-9c17-52cfb993efcf
                    name: 'Eugenia Cummings'
                    username: terrill35
                    email: zula54@example.net
                    email_verified_at: '2024-02-29T04:29:08.000000Z'
                    created_at: '2024-02-29T04:29:09.000000Z'
                    updated_at: '2024-02-29T04:29:09.000000Z'
                    viewer_follows: false
                    followers_count: 0
                    following_count: 0
                    tweets_url: 'http://localhost:8000/api/api/users/terrill35/tweets'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 9b72f855-28e8-47bd-9c17-52cfb993efcf
                      name:
                        type: string
                        example: 'Eugenia Cummings'
                      username:
                        type: string
                        example: terrill35
                      email:
                        type: string
                        example: zula54@example.net
                      email_verified_at:
                        type: string
                        example: '2024-02-29T04:29:08.000000Z'
                      created_at:
                        type: string
                        example: '2024-02-29T04:29:09.000000Z'
                      updated_at:
                        type: string
                        example: '2024-02-29T04:29:09.000000Z'
                      viewer_follows:
                        type: boolean
                        example: false
                      followers_count:
                        type: integer
                        example: 0
                      following_count:
                        type: integer
                        example: 0
                      tweets_url:
                        type: string
                        example: 'http://localhost:8000/api/api/users/terrill35/tweets'
      tags:
        - Users
    patch:
      summary: 'Update the authenticated user'
      operationId: updateTheAuthenticatedUser
      description: "Updates the currently logged-in user's data.\n\nThe token must have the following permission: `profile:write`."
      parameters: []
      responses: {  }
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: dennis.wolff@example.org
                username:
                  type: string
                  description: 'Must contain only letters, numbers, dashes and underscores. Must be at least 4 characters. Must not be greater than 20 characters.'
                  example: amlvjvlacuoybbxnavil
                name:
                  type: string
                  description: 'Must be at least 1 character. Must not be greater than 50 characters.'
                  example: wjseeoigeqousubzo
    delete:
      summary: 'Delete the authenticated user'
      operationId: deleteTheAuthenticatedUser
      description: "Delete the currently logged-in user account.\n\nThe token must have the following permission: `profile:write`."
      parameters: []
      responses: {  }
      tags:
        - Users
  '/api/users/{user_username}/follow':
    post:
      summary: 'Follow another user'
      operationId: followAnotherUser
      description: 'Makes the logged in user follow another user.'
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: user_username
        description: 'The username of the user to follow.'
        example: thay_26
        required: true
        schema:
          type: string
  '/api/users/{user_username}/unfollow':
    post:
      summary: 'Unfollow a user'
      operationId: unfollowAUser
      description: 'Makes the logged in user unfollow a user.'
      parameters: []
      responses: {  }
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: user_username
        description: 'The username of the user to unfollow.'
        example: thay_26
        required: true
        schema:
          type: string
tags:
  -
    name: Tweets
    description: 'Returns a paginated response.'
  -
    name: Users
    description: "\nAPIs for managing users."
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your settings and clicking <b>Generate API token</b>.'
security:
  -
    default: []
